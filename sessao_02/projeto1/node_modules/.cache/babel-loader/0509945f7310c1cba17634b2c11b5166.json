{"ast":null,"code":"var _jsxFileName = \"E:\\\\CURSOS\\\\REACT_JS_E_NEXT_JS_COMPLETO\\\\sessao_02\\\\projeto1\\\\src\\\\Templates\\\\Home\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport { Component, useState } from 'react'; //importando os dados \n\nimport { loadPosts } from '../../utils/load-posts'; //importando os componentes\n\nimport { Posts } from '../../Components/Posts';\nimport { Button } from '../../Components/Button';\nimport { TextInput } from '../../Components/TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  /** state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n  */\n  //useState das variáveis\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const [searchValue, serSearchValue] = useState('');\n  /*iremos determinar se existe mais posts para serem mostrados na página\n  para isso vamos verificar se a página que estamos mais quantidade de posts por\n  página for maior ou igual a quantidade total de posts, significa que\n  não temos mais páginas para ir.\n  vamos passar então a propriedade noMorePosts para o atributo disabled.\n  */\n\n  const noMorePosts = page + postsPerPage >= allPosts.length; //variável utilizada para filtrar os posts conforme conteúdo do input\n\n  const filteredPosts = !!searchValue ? allPosts.filter(post => {\n    return post.title.toLowerCase().includes(searchValue.toLowerCase());\n  }) : posts;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [!!searchValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Search value: \", searchValue, \" Qtd posts: \", filteredPosts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      onChange: this.handleChange,\n      type: \"search\",\n      value: searchValue,\n      placeholder: \"Type your search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), filteredPosts.length > 0 && /*#__PURE__*/_jsxDEV(Posts, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this), filteredPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"N\\xE3o existem posts :( \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: !searchValue && /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Load more posts\",\n        onClick: this.loadMorePosts,\n        disabled: noMorePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"X7BHec0El4/l4JbnV6Aanfl1Kxg=\");\n\n_c = Home;\n\nclass Home2 extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      allPosts: [],\n      page: 0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n\n    this.loadPosts = async () => {\n      const postsAndPhotos = await loadPosts();\n      const {\n        page,\n        postsPerPage\n      } = this.state; //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos\n\n      this.setState({\n        posts: postsAndPhotos.slice(page, postsPerPage),\n        allPosts: postsAndPhotos\n      });\n    };\n\n    this.loadMorePosts = () => {\n      //carrega as variaveis que iremos precisar do state\n      const {\n        page,\n        postsPerPage,\n        allPosts,\n        posts\n      } = this.state; //nextPage terá a página mais a quantidade de postes por página\n\n      const nextPage = page + postsPerPage; //criando um novo array que terá somente os posts que farão parte\n      //da página que será mostrada\n\n      const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage); //passamos para posts o array somente com os itens que serão mostrados\n\n      posts.push(...nextPosts); //setamos agora no state o novo array de posts e a nova pagina\n\n      this.setState({\n        posts,\n        page: nextPage\n      });\n      console.log(page, postsPerPage, nextPage, nextPage + postsPerPage);\n    };\n\n    this.handleChange = e => {\n      //destruct capturando o target do evento\n      const {\n        value\n      } = e.target; //passamos o novo valor de searchValue utilizando o setState\n\n      this.setState({\n        searchValue: value\n      });\n    };\n  }\n\n  //esse é um life cicle metods\n  async componentDidMount() {\n    await this.loadPosts();\n  }\n\n  render() {\n    const {\n      posts,\n      page,\n      postsPerPage,\n      allPosts,\n      searchValue\n    } = this.state; //variável utilizada para filtrar os posts conforme conteúdo do input\n\n    const filteredPosts = !!searchValue ? allPosts.filter(post => {\n      return post.title.toLowerCase().includes(searchValue.toLowerCase());\n    }) : posts;\n    /*iremos determinar se existe mais posts para serem mostrados na página\n    para isso vamos verificar se a página que estamos mais quantidade de posts por\n    página for maior ou igual a quantidade total de posts, significa que\n    não temos mais páginas para ir.\n    vamos passar então a propriedade noMorePosts para o atributo disabled.\n    */\n\n    const noMorePosts = page + postsPerPage >= allPosts.length;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [!!searchValue && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Search value: \", searchValue, \" Qtd posts: \", filteredPosts.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        onChange: this.handleChange,\n        type: \"search\",\n        value: searchValue,\n        placeholder: \"Type your search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), filteredPosts.length > 0 && /*#__PURE__*/_jsxDEV(Posts, {\n        posts: filteredPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 12\n      }, this), filteredPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"N\\xE3o existem posts :( \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: !searchValue && /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Load more posts\",\n          onClick: this.loadMorePosts,\n          disabled: noMorePosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/CURSOS/REACT_JS_E_NEXT_JS_COMPLETO/sessao_02/projeto1/src/Templates/Home/index.jsx"],"names":["Component","useState","loadPosts","Posts","Button","TextInput","Home","posts","setPosts","allPosts","setAllPosts","page","setPage","postsPerPage","setPostsPerPage","searchValue","serSearchValue","noMorePosts","length","filteredPosts","filter","post","title","toLowerCase","includes","handleChange","loadMorePosts","Home2","state","postsAndPhotos","setState","slice","nextPage","nextPosts","push","console","log","e","value","target","componentDidMount","render"],"mappings":"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","sourcesContent":["\nimport './styles.css';\n\nimport {Component, useState} from 'react';\n\n\n//importando os dados \nimport {loadPosts} from '../../utils/load-posts';\n\n//importando os componentes\nimport { Posts } from '../../Components/Posts';\nimport { Button } from '../../Components/Button';\nimport {TextInput} from '../../Components/TextInput';\n\nexport const Home = () => {\n  \n  /** state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n */\n  \n  //useState das variáveis\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const [searchValue, serSearchValue] = useState('');\n\n  /*iremos determinar se existe mais posts para serem mostrados na página\n  para isso vamos verificar se a página que estamos mais quantidade de posts por\n  página for maior ou igual a quantidade total de posts, significa que\n  não temos mais páginas para ir.\n  vamos passar então a propriedade noMorePosts para o atributo disabled.\n  */\n const noMorePosts = page + postsPerPage >= allPosts.length;\n \n  //variável utilizada para filtrar os posts conforme conteúdo do input\n  const filteredPosts = !!searchValue ? \n  allPosts.filter(post => {\n    return post.title.toLowerCase().includes(\n      searchValue.toLowerCase()\n    )\n  })\n  : posts ;\n\n  return (\n    <section className='container'>\n      \n      {!!searchValue && (\n        <div className='search-container'>\n          <h1>Search value: {searchValue} Qtd posts: {filteredPosts.length}</h1>\n        </div>\n      )}\n      \n      <TextInput\n        onChange={this.handleChange}\n        type='search' \n        value={searchValue}\n        placeholder='Type your search'\n      />  \n      \n      {filteredPosts.length >0 &&(\n         <Posts posts={filteredPosts} />\n      )}\n\n      {filteredPosts.length ===0 &&(\n        <p>Não existem posts :( </p>\n        \n      )}\n     \n\n      <div className='button-container'>\n        \n        {!searchValue &&(\n          <Button \n          text='Load more posts'\n          onClick={this.loadMorePosts}\n          disabled={noMorePosts}\n        />\n        )}\n\n      </div>\n    </section>\n    \n  );\n\n}\n\nclass Home2 extends Component{\n \n    state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n\n    //esse é um life cicle metods\n    async componentDidMount(){\n      await this.loadPosts();\n    }\n\n    loadPosts = async () =>{\n      const postsAndPhotos = await loadPosts();\n      const {page, postsPerPage}= this.state;\n      //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos\n      this.setState({\n        posts: postsAndPhotos.slice(page,postsPerPage),\n        allPosts: postsAndPhotos\n      });\n    }\n\n    //carregando mais posts na página\n    loadMorePosts = () =>{\n      //carrega as variaveis que iremos precisar do state\n     const {\n       page,\n       postsPerPage,\n       allPosts,\n       posts\n     } = this.state;\n\n     //nextPage terá a página mais a quantidade de postes por página\n     const nextPage = page + postsPerPage;\n\n     //criando um novo array que terá somente os posts que farão parte\n     //da página que será mostrada\n     const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage)\n\n     //passamos para posts o array somente com os itens que serão mostrados\n     posts.push(...nextPosts);\n\n     //setamos agora no state o novo array de posts e a nova pagina\n     this.setState({posts, page: nextPage});\n     console.log(page, postsPerPage, nextPage, nextPage + postsPerPage);\n    }\n\n    //método para realizar busca no input que recebe o evento\n    handleChange = (e)=>{\n      //destruct capturando o target do evento\n      const{value} = e.target;\n\n      //passamos o novo valor de searchValue utilizando o setState\n      this.setState({searchValue: value});\n    }\n\n  render(){\n    const {posts, page, postsPerPage, allPosts, searchValue } = this.state;\n\n    //variável utilizada para filtrar os posts conforme conteúdo do input\n    const filteredPosts = !!searchValue ? \n    allPosts.filter(post => {\n      return post.title.toLowerCase().includes(\n        searchValue.toLowerCase()\n      )\n    })\n    : posts ;\n\n    /*iremos determinar se existe mais posts para serem mostrados na página\n    para isso vamos verificar se a página que estamos mais quantidade de posts por\n    página for maior ou igual a quantidade total de posts, significa que\n    não temos mais páginas para ir.\n    vamos passar então a propriedade noMorePosts para o atributo disabled.\n    */\n   const noMorePosts = page + postsPerPage >= allPosts.length;\n\n    return (\n      <section className='container'>\n        \n        {!!searchValue && (\n          <div className='search-container'>\n            <h1>Search value: {searchValue} Qtd posts: {filteredPosts.length}</h1>\n          </div>\n        )}\n        \n        <TextInput\n          onChange={this.handleChange}\n          type='search' \n          value={searchValue}\n          placeholder='Type your search'\n        />  \n        \n        {filteredPosts.length >0 &&(\n           <Posts posts={filteredPosts} />\n        )}\n\n        {filteredPosts.length ===0 &&(\n          <p>Não existem posts :( </p>\n          \n        )}\n       \n\n        <div className='button-container'>\n          \n          {!searchValue &&(\n            <Button \n            text='Load more posts'\n            onClick={this.loadMorePosts}\n            disabled={noMorePosts}\n          />\n          )}\n\n        </div>\n      </section>\n      \n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}