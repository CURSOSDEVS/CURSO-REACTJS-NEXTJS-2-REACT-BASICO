{"ast":null,"code":"var _jsxFileName = \"E:\\\\CURSOS\\\\REACT_JS_E_NEXT_JS_COMPLETO\\\\sessao_02\\\\projeto1\\\\src\\\\Templates\\\\Home\\\\index.jsx\";\nimport './styles.css';\nimport { Component } from 'react'; //importando os dados \n\nimport { loadPosts } from '../../utils/load-posts';\nimport { Posts } from '../../Components/Posts';\nimport { Button } from '../../Components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      allPosts: [],\n      page: 0,\n      postsPerPage: 10\n    };\n\n    this.loadPosts = async () => {\n      const postsAndPhotos = await loadPosts();\n      const {\n        page,\n        postsPerPage\n      } = this.state; //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos\n\n      this.setState({\n        posts: postsAndPhotos.slice(page, postsPerPage),\n        allPosts: postsAndPhotos\n      });\n    };\n\n    this.loadMorePosts = () => {\n      //carrega as variaveis que iremos precisar do state\n      const {\n        page,\n        postsPerPage,\n        allPosts,\n        posts\n      } = this.state; //nextPage terá a página mais a quantidade de postes por página\n\n      const nextPage = page + postsPerPage; //criando um novo array que terá somente os posts que farão parte\n      //da página que será mostrada\n\n      const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage); //passamos para posts o array somente com os itens que serão mostrados\n\n      posts.push(...nextPosts); //setamos agora no state o novo array de posts e a nova pagina\n\n      this.setState({\n        posts,\n        page: nextPage\n      });\n      console.log(page, postsPerPage, nextPage, nextPage + postsPerPage);\n    };\n  }\n\n  //esse é um life cicle metods\n  async componentDidMount() {\n    await this.loadPosts();\n  }\n\n  //método para realizar busca den\n  render() {\n    const {\n      posts,\n      page,\n      postsPerPage,\n      allPosts\n    } = this.state;\n    /*iremos determinar se existe mais posts para serem mostrados na página\n    para isso vamos verificar se a página que estamos mais quantidade de posts por\n    página for maior ou igual a quantidade total de posts, significa que\n    não temos mais páginas para ir.\n    vamos passar então a propriedade noMorePosts para o atributo disabled.\n    */\n\n    const noMorePosts = page + postsPerPage >= allPosts.length;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => console.log(e.target.value),\n        type: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Load more posts\",\n          onClick: this.loadMorePosts,\n          disabled: noMorePosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/CURSOS/REACT_JS_E_NEXT_JS_COMPLETO/sessao_02/projeto1/src/Templates/Home/index.jsx"],"names":["Component","loadPosts","Posts","Button","Home","state","posts","allPosts","page","postsPerPage","postsAndPhotos","setState","slice","loadMorePosts","nextPage","nextPosts","push","console","log","componentDidMount","render","noMorePosts","length","e","target","value"],"mappings":";AACA,OAAO,cAAP;AAEA,SAAQA,SAAR,QAAwB,OAAxB,C,CAEA;;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,yBAAvB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAExBK,KAFwB,GAEjB;AACLC,MAAAA,KAAK,EAAC,EADD;AAELC,MAAAA,QAAQ,EAAC,EAFJ;AAGLC,MAAAA,IAAI,EAAC,CAHA;AAILC,MAAAA,YAAY,EAAE;AAJT,KAFiB;;AAAA,SAcxBR,SAdwB,GAcZ,YAAW;AACrB,YAAMS,cAAc,GAAG,MAAMT,SAAS,EAAtC;AACA,YAAM;AAACO,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAsB,KAAKJ,KAAjC,CAFqB,CAGrB;;AACA,WAAKM,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAEI,cAAc,CAACE,KAAf,CAAqBJ,IAArB,EAA0BC,YAA1B,CADK;AAEZF,QAAAA,QAAQ,EAAEG;AAFE,OAAd;AAID,KAtBuB;;AAAA,SAyBxBG,aAzBwB,GAyBR,MAAK;AACnB;AACD,YAAM;AACJL,QAAAA,IADI;AAEJC,QAAAA,YAFI;AAGJF,QAAAA,QAHI;AAIJD,QAAAA;AAJI,UAKF,KAAKD,KALT,CAFoB,CASpB;;AACA,YAAMS,QAAQ,GAAGN,IAAI,GAAGC,YAAxB,CAVoB,CAYpB;AACA;;AACA,YAAMM,SAAS,GAAGR,QAAQ,CAACK,KAAT,CAAeE,QAAf,EAAyBA,QAAQ,GAAGL,YAApC,CAAlB,CAdoB,CAgBpB;;AACAH,MAAAA,KAAK,CAACU,IAAN,CAAW,GAAGD,SAAd,EAjBoB,CAmBpB;;AACA,WAAKJ,QAAL,CAAc;AAACL,QAAAA,KAAD;AAAQE,QAAAA,IAAI,EAAEM;AAAd,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAAkBC,YAAlB,EAAgCK,QAAhC,EAA0CA,QAAQ,GAAGL,YAArD;AACA,KA/CuB;AAAA;;AASxB;AACuB,QAAjBU,iBAAiB,GAAE;AACvB,UAAM,KAAKlB,SAAL,EAAN;AACD;;AAqCD;AAEFmB,EAAAA,MAAM,GAAE;AACN,UAAM;AAACd,MAAAA,KAAD;AAAQE,MAAAA,IAAR;AAAcC,MAAAA,YAAd;AAA4BF,MAAAA;AAA5B,QAAyC,KAAKF,KAApD;AAEA;AACJ;AACA;AACA;AACA;AACA;;AACG,UAAMgB,WAAW,GAAEb,IAAI,GAAGC,YAAP,IAAuBF,QAAQ,CAACe,MAAnD;AAEC,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BAEE;AACE,QAAA,QAAQ,EAAGC,CAAD,IAAMN,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,MAAF,CAASC,KAArB,CADlB;AAEE,QAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,cAFF,oBAKK;AAAA;AAAA;AAAA;AAAA,cALL,eAKU;AAAA;AAAA;AAAA;AAAA,cALV,eAOE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEnB;AAAd;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,OAAO,EAAE,KAAKO,aAFhB;AAGE,UAAA,QAAQ,EAAEQ;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAlFyB;;AAqF5B,eAAejB,IAAf","sourcesContent":["\nimport './styles.css';\n\nimport {Component} from 'react';\n\n//importando os dados \nimport {loadPosts} from '../../utils/load-posts';\nimport { Posts } from '../../Components/Posts';\nimport { Button } from '../../Components/Button';\n\nclass Home extends Component{\n \n    state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10\n    };\n\n    //esse é um life cicle metods\n    async componentDidMount(){\n      await this.loadPosts();\n    }\n\n    loadPosts = async () =>{\n      const postsAndPhotos = await loadPosts();\n      const {page, postsPerPage}= this.state;\n      //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos\n      this.setState({\n        posts: postsAndPhotos.slice(page,postsPerPage),\n        allPosts: postsAndPhotos\n      });\n    }\n\n    //carregando mais posts na página\n    loadMorePosts = () =>{\n      //carrega as variaveis que iremos precisar do state\n     const {\n       page,\n       postsPerPage,\n       allPosts,\n       posts\n     } = this.state;\n\n     //nextPage terá a página mais a quantidade de postes por página\n     const nextPage = page + postsPerPage;\n\n     //criando um novo array que terá somente os posts que farão parte\n     //da página que será mostrada\n     const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage)\n\n     //passamos para posts o array somente com os itens que serão mostrados\n     posts.push(...nextPosts);\n\n     //setamos agora no state o novo array de posts e a nova pagina\n     this.setState({posts, page: nextPage});\n     console.log(page, postsPerPage, nextPage, nextPage + postsPerPage);\n    }\n\n    //método para realizar busca den\n\n  render(){\n    const {posts, page, postsPerPage, allPosts } = this.state;\n\n    /*iremos determinar se existe mais posts para serem mostrados na página\n    para isso vamos verificar se a página que estamos mais quantidade de posts por\n    página for maior ou igual a quantidade total de posts, significa que\n    não temos mais páginas para ir.\n    vamos passar então a propriedade noMorePosts para o atributo disabled.\n    */\n   const noMorePosts= page + postsPerPage >= allPosts.length;\n\n    return (\n      <section className='container'>\n\n        <input \n          onChange={(e)=> console.log(e.target.value)}\n          type='search' \n        /> <br/><br/>\n\n        <Posts posts={posts} />\n\n        <div className='button-container'>\n          <Button \n            text='Load more posts'\n            onClick={this.loadMorePosts}\n            disabled={noMorePosts}\n          />\n        </div>\n      </section>\n      \n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}