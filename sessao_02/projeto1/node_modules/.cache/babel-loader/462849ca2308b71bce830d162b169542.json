{"ast":null,"code":"export const loadPosts = async () => {\n  //utilizamos o fetch para fazer uma requisição e será esperado um response \n  //neste caso faremos uma requisição para os posts e outra para as fotos\n  const postResponse = fetch('https://jsonplaceholder.typicode.com/posts');\n  const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos'); //criamos dois arrays que irão receber os conteúdos na ordem dos responses\n  //que são obtidos através da função Promise que pega o retorno do response\n  //e passa para cada variavel separada\n\n  const [posts, photos] = await Promise.all([postResponse, photosResponse]); //aqui criamos um objeto que receberá a conversão do array para\n  //o formato json\n\n  const postJson = await posts.json();\n  const photosJson = await photos.json(); //fazendo a união entre dois arrays utilizando o map para escolher\n\n  /*quais atributos do primeiro array serão utilizados, sendo que\r\n  iremos retornar o post e utilizando a função cover nós pegamos do \r\n  segundo array o atributo que queremos */\n\n  const postsAndPhotos = postJson.map((post, index) => {\n    return { ...post,\n      cover: photosJson[index].url\n    };\n  });\n  return postsAndPhotos;\n};","map":{"version":3,"sources":["E:/CURSOS/REACT_JS_E_NEXT_JS_COMPLETO/sessao_02/projeto1/src/utils/load-posts.js"],"names":["loadPosts","postResponse","fetch","photosResponse","posts","photos","Promise","all","postJson","json","photosJson","postsAndPhotos","map","post","index","cover","url"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,YAAW;AAChC;AACA;AACA,QAAMC,YAAY,GAAGC,KAAK,CAAC,4CAAD,CAA1B;AACA,QAAMC,cAAc,GAAGD,KAAK,CAAC,6CAAD,CAA5B,CAJgC,CAMhC;AACA;AACA;;AACA,QAAM,CAACE,KAAD,EAAQC,MAAR,IAAkB,MAAMC,OAAO,CAACC,GAAR,CAAY,CAACN,YAAD,EAAeE,cAAf,CAAZ,CAA9B,CATgC,CAWhC;AACA;;AACA,QAAMK,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,EAAvB;AACA,QAAMC,UAAU,GAAG,MAAML,MAAM,CAACI,IAAP,EAAzB,CAdgC,CAgBhC;;AACA;AACJ;AACA;;AACI,QAAME,cAAc,GAAGH,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAMC,KAAN,KAAc;AAChD,WAAO,EAAE,GAAGD,IAAL;AAAWE,MAAAA,KAAK,EAAEL,UAAU,CAACI,KAAD,CAAV,CAAkBE;AAApC,KAAP;AACD,GAFsB,CAAvB;AAIA,SAAOL,cAAP;AACH,CAzBM","sourcesContent":["export const loadPosts = async () =>{\r\n    //utilizamos o fetch para fazer uma requisição e será esperado um response \r\n    //neste caso faremos uma requisição para os posts e outra para as fotos\r\n    const postResponse = fetch('https://jsonplaceholder.typicode.com/posts');\r\n    const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos');\r\n\r\n    //criamos dois arrays que irão receber os conteúdos na ordem dos responses\r\n    //que são obtidos através da função Promise que pega o retorno do response\r\n    //e passa para cada variavel separada\r\n    const [posts, photos] = await Promise.all([postResponse, photosResponse]);\r\n\r\n    //aqui criamos um objeto que receberá a conversão do array para\r\n    //o formato json\r\n    const postJson = await posts.json();\r\n    const photosJson = await photos.json();\r\n\r\n    //fazendo a união entre dois arrays utilizando o map para escolher\r\n    /*quais atributos do primeiro array serão utilizados, sendo que\r\n    iremos retornar o post e utilizando a função cover nós pegamos do \r\n    segundo array o atributo que queremos */\r\n    const postsAndPhotos = postJson.map((post,index)=>{\r\n      return { ...post, cover: photosJson[index].url }\r\n    })\r\n\r\n    return postsAndPhotos;\r\n}"]},"metadata":{},"sourceType":"module"}