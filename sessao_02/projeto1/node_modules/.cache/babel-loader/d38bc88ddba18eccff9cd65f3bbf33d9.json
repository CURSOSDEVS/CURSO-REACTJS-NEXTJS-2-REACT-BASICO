{"ast":null,"code":"var _jsxFileName = \"E:\\\\CURSOS\\\\REACT_JS_E_NEXT_JS_COMPLETO\\\\sessao_02\\\\projeto1\\\\src\\\\Templates\\\\Home\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport { useState } from 'react'; //importando os dados \n\nimport { loadPosts } from '../../utils/load-posts'; //importando os componentes\n\nimport { Posts } from '../../Components/Posts';\nimport { Button } from '../../Components/Button';\nimport { TextInput } from '../../Components/TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  /** state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n  */\n  //useState das variáveis\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [postsPerPage] = useState(10);\n  const [searchValue, setSearchValue] = useState('');\n  /*iremos determinar se existe mais posts para serem mostrados na página\n  para isso vamos verificar se a página que estamos mais quantidade de posts por\n  página for maior ou igual a quantidade total de posts, significa que\n  não temos mais páginas para ir.\n  vamos passar então a propriedade noMorePosts para o atributo disabled.\n  */\n\n  const noMorePosts = page + postsPerPage >= allPosts.length; //variável utilizada para filtrar os posts conforme conteúdo do input\n\n  const filteredPosts = !!searchValue ? allPosts.filter(post => {\n    return post.title.toLowerCase().includes(searchValue.toLowerCase());\n  }) : posts;\n\n  const handleLoadPosts = async () => {\n    const postsAndPhotos = await loadPosts(); // const {page, postsPerPage}= this.state;\n    //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos    \n\n    setPosts(postsAndPhotos.slice(page, postsPerPage));\n    setAllPosts(postsAndPhotos);\n  }; //carregando mais posts na página\n\n\n  const loadMorePosts = () => {\n    //nextPage terá a página mais a quantidade de postes por página\n    const nextPage = page + postsPerPage; //criando um novo array que terá somente os posts que farão parte\n    //da página que será mostrada\n\n    const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage); //passamos para posts o array somente com os itens que serão mostrados\n\n    posts.push(...nextPosts); //setamos agora no state o novo array de posts e a nova pagina\n\n    setPosts(posts);\n    setPage(nextPage);\n  }; //método para realizar busca no input que recebe o evento\n\n\n  const handleChange = e => {\n    //destruct capturando o target do evento\n    const {\n      value\n    } = e.target; //passamos o novo valor de searchValue utilizando a função setSearchValue\n\n    setSearchValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [!!searchValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Search value: \", searchValue, \" Qtd posts: \", filteredPosts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      onChange: handleChange,\n      type: \"search\",\n      value: searchValue,\n      placeholder: \"Type your search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), filteredPosts.length > 0 && /*#__PURE__*/_jsxDEV(Posts, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }, this), filteredPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"N\\xE3o existem posts :( \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: !searchValue && /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Load more posts\",\n        onClick: loadMorePosts,\n        disabled: noMorePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n/*\nclass Home2 extends Component{\n \n    state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n\n    //esse é um life cicle metods\n    async componentDidMount(){\n      await this.loadPosts();\n    }\n\n    loadPosts = async () =>{\n      const postsAndPhotos = await loadPosts();\n      const {page, postsPerPage}= this.state;\n      //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos\n      this.setState({\n        posts: postsAndPhotos.slice(page,postsPerPage),\n        allPosts: postsAndPhotos\n      });\n    }\n\n    //carregando mais posts na página\n    loadMorePosts = () =>{\n      //carrega as variaveis que iremos precisar do state\n     const {\n       page,\n       postsPerPage,\n       allPosts,\n       posts\n     } = this.state;\n\n     //nextPage terá a página mais a quantidade de postes por página\n     const nextPage = page + postsPerPage;\n\n     //criando um novo array que terá somente os posts que farão parte\n     //da página que será mostrada\n     const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage)\n\n     //passamos para posts o array somente com os itens que serão mostrados\n     posts.push(...nextPosts);\n\n     //setamos agora no state o novo array de posts e a nova pagina\n     this.setState({posts, page: nextPage});\n     console.log(page, postsPerPage, nextPage, nextPage + postsPerPage);\n    }\n\n    //método para realizar busca no input que recebe o evento\n    handleChange = (e)=>{\n      //destruct capturando o target do evento\n      const{value} = e.target;\n\n      //passamos o novo valor de searchValue utilizando o setState\n      this.setState({searchValue: value});\n    }\n\n  render(){\n    const {posts, page, postsPerPage, allPosts, searchValue } = this.state;\n\n    //variável utilizada para filtrar os posts conforme conteúdo do input\n    const filteredPosts = !!searchValue ? \n    allPosts.filter(post => {\n      return post.title.toLowerCase().includes(\n        searchValue.toLowerCase()\n      )\n    })\n    : posts ;\n\n    /*iremos determinar se existe mais posts para serem mostrados na página\n    para isso vamos verificar se a página que estamos mais quantidade de posts por\n    página for maior ou igual a quantidade total de posts, significa que\n    não temos mais páginas para ir.\n    vamos passar então a propriedade noMorePosts para o atributo disabled.\n    */\n\n/*\nconst noMorePosts = page + postsPerPage >= allPosts.length;\n  return (\n   <section className='container'>\n     \n     {!!searchValue && (\n       <div className='search-container'>\n         <h1>Search value: {searchValue} Qtd posts: {filteredPosts.length}</h1>\n       </div>\n     )}\n     \n     <TextInput\n       onChange={this.handleChange}\n       type='search' \n       value={searchValue}\n       placeholder='Type your search'\n     />  \n     \n     {filteredPosts.length >0 &&(\n        <Posts posts={filteredPosts} />\n     )}\n      {filteredPosts.length ===0 &&(\n       <p>Não existem posts :( </p>\n       \n     )}\n    \n      <div className='button-container'>\n       \n       {!searchValue &&(\n         <Button \n         text='Load more posts'\n         onClick={this.loadMorePosts}\n         disabled={noMorePosts}\n       />\n       )}\n      </div>\n   </section>\n   \n );\n}\n}\nexport default Home;*/\n\n_s(Home, \"HhZJ/7YaPDCOd4/D4EK9CYE17nU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/CURSOS/REACT_JS_E_NEXT_JS_COMPLETO/sessao_02/projeto1/src/Templates/Home/index.jsx"],"names":["useState","loadPosts","Posts","Button","TextInput","Home","posts","setPosts","allPosts","setAllPosts","page","setPage","postsPerPage","searchValue","setSearchValue","noMorePosts","length","filteredPosts","filter","post","title","toLowerCase","includes","handleLoadPosts","postsAndPhotos","slice","loadMorePosts","nextPage","nextPosts","push","handleChange","e","value","target"],"mappings":"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","sourcesContent":["\nimport './styles.css';\n\nimport {useState} from 'react';\n\n\n//importando os dados \nimport {loadPosts} from '../../utils/load-posts';\n\n//importando os componentes\nimport { Posts } from '../../Components/Posts';\nimport { Button } from '../../Components/Button';\nimport {TextInput} from '../../Components/TextInput';\n\nexport const Home = () => {\n  \n  /** state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n */\n  \n  //useState das variáveis\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [postsPerPage] = useState(10);\n  const [searchValue, setSearchValue] = useState('');\n\n  /*iremos determinar se existe mais posts para serem mostrados na página\n  para isso vamos verificar se a página que estamos mais quantidade de posts por\n  página for maior ou igual a quantidade total de posts, significa que\n  não temos mais páginas para ir.\n  vamos passar então a propriedade noMorePosts para o atributo disabled.\n  */\n const noMorePosts = page + postsPerPage >= allPosts.length;\n\n \n\n  //variável utilizada para filtrar os posts conforme conteúdo do input\n  const filteredPosts = !!searchValue ? \n  allPosts.filter(post => {\n    return post.title.toLowerCase().includes(\n      searchValue.toLowerCase()\n    )\n  })\n  : posts ;\n\n  const handleLoadPosts = async () =>{\n    const postsAndPhotos = await loadPosts();\n   // const {page, postsPerPage}= this.state;\n\n    //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos    \n    setPosts(postsAndPhotos.slice(page,postsPerPage));\n    setAllPosts(postsAndPhotos);\n\n  }\n\n\n  //carregando mais posts na página\n  const loadMorePosts = () =>{\n  \n   //nextPage terá a página mais a quantidade de postes por página\n   const nextPage = page + postsPerPage;\n\n   //criando um novo array que terá somente os posts que farão parte\n   //da página que será mostrada\n   const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage)\n\n   //passamos para posts o array somente com os itens que serão mostrados\n   posts.push(...nextPosts);\n\n   //setamos agora no state o novo array de posts e a nova pagina\n   setPosts(posts);\n   setPage(nextPage);\n\n  }\n\n  //método para realizar busca no input que recebe o evento\n const handleChange = (e)=>{\n    //destruct capturando o target do evento\n    const{value} = e.target;\n    //passamos o novo valor de searchValue utilizando a função setSearchValue\n    setSearchValue(value);\n  }\n\n  \n\n  return (\n    <section className='container'>\n      \n      {!!searchValue && (\n        <div className='search-container'>\n          <h1>Search value: {searchValue} Qtd posts: {filteredPosts.length}</h1>\n        </div>\n      )}\n      \n      <TextInput\n        onChange={handleChange}\n        type='search' \n        value={searchValue}\n        placeholder='Type your search'\n      />  \n      \n      {filteredPosts.length >0 &&(\n         <Posts posts={filteredPosts} />\n      )}\n\n      {filteredPosts.length ===0 &&(\n        <p>Não existem posts :( </p>\n        \n      )}\n     \n\n      <div className='button-container'>\n        \n        {!searchValue &&(\n          <Button \n          text='Load more posts'\n          onClick={loadMorePosts}\n          disabled={noMorePosts}\n        />\n        )}\n\n      </div>\n    </section>\n    \n  );\n\n}\n\n/*\nclass Home2 extends Component{\n \n    state ={\n      posts:[],\n      allPosts:[],\n      page:0,\n      postsPerPage: 10,\n      searchValue: ''\n    };\n\n    //esse é um life cicle metods\n    async componentDidMount(){\n      await this.loadPosts();\n    }\n\n    loadPosts = async () =>{\n      const postsAndPhotos = await loadPosts();\n      const {page, postsPerPage}= this.state;\n      //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos\n      this.setState({\n        posts: postsAndPhotos.slice(page,postsPerPage),\n        allPosts: postsAndPhotos\n      });\n    }\n\n    //carregando mais posts na página\n    loadMorePosts = () =>{\n      //carrega as variaveis que iremos precisar do state\n     const {\n       page,\n       postsPerPage,\n       allPosts,\n       posts\n     } = this.state;\n\n     //nextPage terá a página mais a quantidade de postes por página\n     const nextPage = page + postsPerPage;\n\n     //criando um novo array que terá somente os posts que farão parte\n     //da página que será mostrada\n     const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage)\n\n     //passamos para posts o array somente com os itens que serão mostrados\n     posts.push(...nextPosts);\n\n     //setamos agora no state o novo array de posts e a nova pagina\n     this.setState({posts, page: nextPage});\n     console.log(page, postsPerPage, nextPage, nextPage + postsPerPage);\n    }\n\n    //método para realizar busca no input que recebe o evento\n    handleChange = (e)=>{\n      //destruct capturando o target do evento\n      const{value} = e.target;\n\n      //passamos o novo valor de searchValue utilizando o setState\n      this.setState({searchValue: value});\n    }\n\n  render(){\n    const {posts, page, postsPerPage, allPosts, searchValue } = this.state;\n\n    //variável utilizada para filtrar os posts conforme conteúdo do input\n    const filteredPosts = !!searchValue ? \n    allPosts.filter(post => {\n      return post.title.toLowerCase().includes(\n        searchValue.toLowerCase()\n      )\n    })\n    : posts ;\n\n    /*iremos determinar se existe mais posts para serem mostrados na página\n    para isso vamos verificar se a página que estamos mais quantidade de posts por\n    página for maior ou igual a quantidade total de posts, significa que\n    não temos mais páginas para ir.\n    vamos passar então a propriedade noMorePosts para o atributo disabled.\n    */\n   /*\n   const noMorePosts = page + postsPerPage >= allPosts.length;\n\n    return (\n      <section className='container'>\n        \n        {!!searchValue && (\n          <div className='search-container'>\n            <h1>Search value: {searchValue} Qtd posts: {filteredPosts.length}</h1>\n          </div>\n        )}\n        \n        <TextInput\n          onChange={this.handleChange}\n          type='search' \n          value={searchValue}\n          placeholder='Type your search'\n        />  \n        \n        {filteredPosts.length >0 &&(\n           <Posts posts={filteredPosts} />\n        )}\n\n        {filteredPosts.length ===0 &&(\n          <p>Não existem posts :( </p>\n          \n        )}\n       \n\n        <div className='button-container'>\n          \n          {!searchValue &&(\n            <Button \n            text='Load more posts'\n            onClick={this.loadMorePosts}\n            disabled={noMorePosts}\n          />\n          )}\n\n        </div>\n      </section>\n      \n    );\n  }\n}\n\nexport default Home;*/\n"]},"metadata":{},"sourceType":"module"}