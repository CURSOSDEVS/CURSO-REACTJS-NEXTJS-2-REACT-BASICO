{"ast":null,"code":"var _jsxFileName = \"E:\\\\CURSOS\\\\REACT_JS_E_NEXT_JS_COMPLETO\\\\sessao_02\\\\projeto1\\\\src\\\\App.js\";\nimport './App.css';\nimport { Component } from 'react'; //importando o componente PostCart\n\nimport { PostCard } from '../src/Components/PostCard'; //importando os dados \n\nimport { load_Posts } from './utils/load-posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: []\n    };\n\n    this.loadPosts = async () => {};\n  }\n\n  //esse é um life cicle metods\n  componentDidMount() {\n    this.loadPosts();\n  }\n\n  //é um life cicle que recebe o estado anterior ou props states\n  componentDidUpdate() {} //para apagar o lixo e não dar erro no navegador\n\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App, posts\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/CURSOS/REACT_JS_E_NEXT_JS_COMPLETO/sessao_02/projeto1/src/App.js"],"names":["Component","PostCard","load_Posts","App","state","posts","loadPosts","componentDidMount","componentDidUpdate","componentWillUnmount","render","map","post","id"],"mappings":";AACA,OAAO,WAAP;AACA,SAAQA,SAAR,QAAwB,OAAxB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,4BAAvB,C,CAEA;;AACA,SAAQC,UAAR,QAAyB,oBAAzB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEvBI,KAFuB,GAEhB;AACLC,MAAAA,KAAK,EAAC;AADD,KAFgB;;AAAA,SAavBC,SAbuB,GAaX,YAAW,CAEtB,CAfsB;AAAA;;AAQvB;AACAC,EAAAA,iBAAiB,GAAE;AACjB,SAAKD,SAAL;AACD;;AAMD;AACAE,EAAAA,kBAAkB,GAAE,CAEnB,CApBsB,CAsBvB;;;AACAC,EAAAA,oBAAoB,GAAE,CAErB;;AAEHC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACL,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGC,KAAK,CAACM,GAAN,CAAUC,IAAI,iBACb,QAAC,QAAD;AAEU,UAAA,IAAI,EAAEA;AAFhB,WACeA,IAAI,CAACC,EADpB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA3CwB;;AA8C3B,eAAeV,GAAf","sourcesContent":["\nimport './App.css';\nimport {Component} from 'react'\n//importando o componente PostCart\nimport {PostCard} from '../src/Components/PostCard'\n\n//importando os dados \nimport {load_Posts} from './utils/load-posts'\n\nclass App extends Component{\n \n    state ={\n      posts:[\n\n      ]\n    };\n\n    //esse é um life cicle metods\n    componentDidMount(){\n      this.loadPosts();\n    }\n\n    loadPosts = async () =>{\n      \n    }\n\n    //é um life cicle que recebe o estado anterior ou props states\n    componentDidUpdate(){\n    \n    }\n\n    //para apagar o lixo e não dar erro no navegador\n    componentWillUnmount(){\n  \n    }\n\n  render(){\n    const {posts} = this.state;\n\n    return (\n      <section className='container'>\n        <div className=\"App, posts\">     \n          {posts.map(post=> (\n            <PostCard \n                      key={post.id}\n                      post={post}\n            />  \n          ))}\n        </div>\n      </section>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}