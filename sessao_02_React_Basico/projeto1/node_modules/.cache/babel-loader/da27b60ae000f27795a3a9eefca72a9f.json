{"ast":null,"code":"var _jsxFileName = \"E:\\\\CURSOS\\\\REACT_JS_E_NEXT_JS_COMPLETO\\\\sessao_02_React_Basico\\\\sessao_02_React_Basico\\\\projeto1\\\\src\\\\Templates\\\\Home\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport { useState, useEffect, useCallback } from 'react'; //importando os dados \n\nimport { loadPosts } from '../../utils/load-posts'; //importando os componentes\n\nimport { Posts } from '../../Components/Posts';\nimport { Button } from '../../Components/Button';\nimport { TextInput } from '../../Components/TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  //useState das variáveis\n  const [posts, setPosts] = useState([]);\n  const [allPosts, setAllPosts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [postsPerPage] = useState(10);\n  const [searchValue, setSearchValue] = useState('');\n  /*iremos determinar se existe mais posts para serem mostrados na página\r\n  para isso vamos verificar se a página que estamos mais quantidade de posts por\r\n  página for maior ou igual a quantidade total de posts, significa que\r\n  não temos mais páginas para ir.\r\n  vamos passar então a propriedade noMorePosts para o atributo disabled.\r\n  */\n\n  const noMorePosts = page + postsPerPage >= allPosts.length; //variável utilizada para filtrar os posts conforme conteúdo do input\n\n  const filteredPosts = !!searchValue ? allPosts.filter(post => {\n    return post.title.toLowerCase().includes(searchValue.toLowerCase());\n  }) : posts;\n  const handleLoadPosts = useCallback(async (page, postsPerPage) => {\n    const postsAndPhotos = await loadPosts(); // const {page, postsPerPage}= this.state;\n    //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos    \n\n    setPosts(postsAndPhotos.slice(page, postsPerPage));\n    setAllPosts(postsAndPhotos);\n  }, []); //utilizando um hook \n\n  useEffect(() => {\n    handleLoadPosts(0, postsPerPage);\n  }, [handleLoadPosts, postsPerPage]); //carregando mais posts na página\n\n  const loadMorePosts = () => {\n    //nextPage terá a página mais a quantidade de postes por página\n    const nextPage = page + postsPerPage; //criando um novo array que terá somente os posts que farão parte\n    //da página que será mostrada\n\n    const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage); //passamos para posts o array somente com os itens que serão mostrados\n\n    posts.push(...nextPosts); //setamos agora no state o novo array de posts e a nova pagina\n\n    setPosts(posts);\n    setPage(nextPage);\n  }; //método para realizar busca no input que recebe o evento\n\n\n  const handleChange = e => {\n    //destruct capturando o target do evento\n    const {\n      value\n    } = e.target; //passamos o novo valor de searchValue utilizando a função setSearchValue\n\n    setSearchValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [!!searchValue && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Search value: \", searchValue, \" Qtd posts: \", filteredPosts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      onChange: handleChange,\n      type: \"search\",\n      value: searchValue,\n      placeholder: \"Type your search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), filteredPosts.length > 0 && /*#__PURE__*/_jsxDEV(Posts, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }, this), filteredPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"N\\xE3o existem posts :( \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: !searchValue && /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Load more posts\",\n        onClick: loadMorePosts,\n        disabled: noMorePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"ILcvSfUJ5dDRphfqmJONcrboaHQ=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/CURSOS/REACT_JS_E_NEXT_JS_COMPLETO/sessao_02_React_Basico/sessao_02_React_Basico/projeto1/src/Templates/Home/index.jsx"],"names":["useState","useEffect","useCallback","loadPosts","Posts","Button","TextInput","Home","posts","setPosts","allPosts","setAllPosts","page","setPage","postsPerPage","searchValue","setSearchValue","noMorePosts","length","filteredPosts","filter","post","title","toLowerCase","includes","handleLoadPosts","postsAndPhotos","slice","loadMorePosts","nextPage","nextPosts","push","handleChange","e","value","target"],"mappings":";;;AACA,OAAO,cAAP;AAEA,SAAQA,QAAR,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA8C,OAA9C,C,CAGA;;AACA,SAAQC,SAAR,QAAwB,wBAAxB,C,CAEA;;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAAQC,SAAR,QAAwB,4BAAxB;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAExB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,YAAD,IAAiBd,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AAEA;AACF;AACA;AACA;AACA;AACA;;AACC,QAAMiB,WAAW,GAAGL,IAAI,GAAGE,YAAP,IAAuBJ,QAAQ,CAACQ,MAApD,CAfyB,CAiBxB;;AACA,QAAMC,aAAa,GAAG,CAAC,CAACJ,WAAF,GACtBL,QAAQ,CAACU,MAAT,CAAgBC,IAAI,IAAI;AACtB,WAAOA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CACLT,WAAW,CAACQ,WAAZ,EADK,CAAP;AAGD,GAJD,CADsB,GAMpBf,KANF;AAUA,QAAMiB,eAAe,GAAGvB,WAAW,CAAC,OAAOU,IAAP,EAAaE,YAAb,KAA6B;AAC/D,UAAMY,cAAc,GAAG,MAAMvB,SAAS,EAAtC,CAD+D,CAEhE;AAEC;;AACAM,IAAAA,QAAQ,CAACiB,cAAc,CAACC,KAAf,CAAqBf,IAArB,EAA0BE,YAA1B,CAAD,CAAR;AACAH,IAAAA,WAAW,CAACe,cAAD,CAAX;AAED,GARkC,EAQjC,EARiC,CAAnC,CA5BwB,CAsCxB;;AACDzB,EAAAA,SAAS,CAAC,MAAI;AACbwB,IAAAA,eAAe,CAAC,CAAD,EAAIX,YAAJ,CAAf;AACD,GAFS,EAEP,CAACW,eAAD,EAAkBX,YAAlB,CAFO,CAAT,CAvCyB,CA2CxB;;AACA,QAAMc,aAAa,GAAG,MAAK;AAE1B;AACA,UAAMC,QAAQ,GAAGjB,IAAI,GAAGE,YAAxB,CAH0B,CAK1B;AACA;;AACA,UAAMgB,SAAS,GAAGpB,QAAQ,CAACiB,KAAT,CAAeE,QAAf,EAAyBA,QAAQ,GAAGf,YAApC,CAAlB,CAP0B,CAS1B;;AACAN,IAAAA,KAAK,CAACuB,IAAN,CAAW,GAAGD,SAAd,EAV0B,CAY1B;;AACArB,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAK,IAAAA,OAAO,CAACgB,QAAD,CAAP;AAEA,GAhBD,CA5CwB,CA8DxB;;;AACD,QAAMG,YAAY,GAAIC,CAAD,IAAK;AACvB;AACA,UAAK;AAACC,MAAAA;AAAD,QAAUD,CAAC,CAACE,MAAjB,CAFuB,CAGvB;;AACAnB,IAAAA,cAAc,CAACkB,KAAD,CAAd;AACD,GALF;;AASC,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,eAEG,CAAC,CAACnB,WAAF,iBACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAA,qCAAmBA,WAAnB,kBAA4CI,aAAa,CAACD,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQE,QAAC,SAAD;AACE,MAAA,QAAQ,EAAEc,YADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAEjB,WAHT;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YARF,EAeGI,aAAa,CAACD,MAAd,GAAsB,CAAtB,iBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEC;AAAd;AAAA;AAAA;AAAA;AAAA,YAhBL,EAmBGA,aAAa,CAACD,MAAd,KAAwB,CAAxB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAyBE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAEG,CAACH,WAAD,iBACC,QAAC,MAAD;AACA,QAAA,IAAI,EAAC,iBADL;AAEA,QAAA,OAAO,EAAEa,aAFT;AAGA,QAAA,QAAQ,EAAEX;AAHV;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAjHM;;GAAMV,I;;KAAAA,I","sourcesContent":["\r\nimport './styles.css';\r\n\r\nimport {useState,useEffect, useCallback} from 'react';\r\n\r\n\r\n//importando os dados \r\nimport {loadPosts} from '../../utils/load-posts';\r\n\r\n//importando os componentes\r\nimport { Posts } from '../../Components/Posts';\r\nimport { Button } from '../../Components/Button';\r\nimport {TextInput} from '../../Components/TextInput';\r\n\r\nexport const Home = () => {\r\n  \r\n  //useState das variáveis\r\n  const [posts, setPosts] = useState([]);\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [postsPerPage] = useState(10);\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  /*iremos determinar se existe mais posts para serem mostrados na página\r\n  para isso vamos verificar se a página que estamos mais quantidade de posts por\r\n  página for maior ou igual a quantidade total de posts, significa que\r\n  não temos mais páginas para ir.\r\n  vamos passar então a propriedade noMorePosts para o atributo disabled.\r\n  */\r\n const noMorePosts = page + postsPerPage >= allPosts.length;\r\n\r\n  //variável utilizada para filtrar os posts conforme conteúdo do input\r\n  const filteredPosts = !!searchValue ? \r\n  allPosts.filter(post => {\r\n    return post.title.toLowerCase().includes(\r\n      searchValue.toLowerCase()\r\n    )\r\n  })\r\n  : posts ;\r\n\r\n  \r\n\r\n  const handleLoadPosts = useCallback(async (page, postsPerPage) =>{\r\n    const postsAndPhotos = await loadPosts();\r\n   // const {page, postsPerPage}= this.state;\r\n\r\n    //susbstituimos o postJson que tinha somente os posts pelo postsAndPhotos    \r\n    setPosts(postsAndPhotos.slice(page,postsPerPage));\r\n    setAllPosts(postsAndPhotos);\r\n\r\n  },[])\r\n\r\n  //utilizando um hook \r\n useEffect(()=>{\r\n  handleLoadPosts(0, postsPerPage);\r\n}, [handleLoadPosts, postsPerPage]);\r\n  \r\n  //carregando mais posts na página\r\n  const loadMorePosts = () =>{\r\n  \r\n   //nextPage terá a página mais a quantidade de postes por página\r\n   const nextPage = page + postsPerPage;\r\n\r\n   //criando um novo array que terá somente os posts que farão parte\r\n   //da página que será mostrada\r\n   const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage)\r\n\r\n   //passamos para posts o array somente com os itens que serão mostrados\r\n   posts.push(...nextPosts);\r\n\r\n   //setamos agora no state o novo array de posts e a nova pagina\r\n   setPosts(posts);\r\n   setPage(nextPage);\r\n\r\n  }\r\n\r\n  //método para realizar busca no input que recebe o evento\r\n const handleChange = (e)=>{\r\n    //destruct capturando o target do evento\r\n    const{value} = e.target;\r\n    //passamos o novo valor de searchValue utilizando a função setSearchValue\r\n    setSearchValue(value);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <section className='container'>\r\n      \r\n      {!!searchValue && (\r\n        <div className='search-container'>\r\n          <h1>Search value: {searchValue} Qtd posts: {filteredPosts.length}</h1>\r\n        </div>\r\n      )}\r\n      \r\n      <TextInput\r\n        onChange={handleChange}\r\n        type='search' \r\n        value={searchValue}\r\n        placeholder='Type your search'\r\n      />  \r\n      \r\n      {filteredPosts.length >0 &&(\r\n         <Posts posts={filteredPosts} />\r\n      )}\r\n\r\n      {filteredPosts.length ===0 &&(\r\n        <p>Não existem posts :( </p>\r\n        \r\n      )}\r\n     \r\n\r\n      <div className='button-container'>\r\n        \r\n        {!searchValue &&(\r\n          <Button \r\n          text='Load more posts'\r\n          onClick={loadMorePosts}\r\n          disabled={noMorePosts}\r\n        />\r\n        )}\r\n\r\n      </div>\r\n    </section>\r\n    \r\n  );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}